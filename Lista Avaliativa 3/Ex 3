#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct Veiculo {
    char proprietario[100];
    char combustivel[10];
    char modelo[100];
    char cor[100];
    char chassi[100];
    char placa[10];
    int ano;
    struct Veiculo* proximo;
} Veiculo;

Veiculo* criarVeiculo(char proprietario[], char combustivel[], char modelo[], char cor[], char chassi[], int ano, char placa[]) {
    Veiculo* novoVeiculo = (Veiculo*)malloc(sizeof(Veiculo));
    strcpy(novoVeiculo->proprietario, proprietario);
    strcpy(novoVeiculo->combustivel, combustivel);
    strcpy(novoVeiculo->modelo, modelo);
    strcpy(novoVeiculo->cor, cor);
    strcpy(novoVeiculo->chassi, chassi);
    novoVeiculo->ano = ano;
    strcpy(novoVeiculo->placa, placa);
    novoVeiculo->proximo = NULL;
    return novoVeiculo;
}

void inserirVeiculo(Veiculo** lista, Veiculo* novoVeiculo) {
    if (*lista == NULL) {
        *lista = novoVeiculo;
    } else {
        Veiculo* atual = *lista;
        while (atual->proximo != NULL) {
            atual = atual->proximo;
        }
        atual->proximo = novoVeiculo;
    }
}

void listarProprietariosDiesel(Veiculo* lista) {
    Veiculo* atual = lista;
    int encontrou = 0;

    printf("Proprietarios de veiculos do ano de 2010 ou posterior movidos a diesel:\n");

    while (atual != NULL) {
        if (atual->ano >= 2010 && strcmp(atual->combustivel, "diesel") == 0) {
            printf("%s\n", atual->proprietario);
            encontrou = 1;
        }
        atual = atual->proximo;
    }

    if (!encontrou) {
        printf("Nenhum veiculo encontrado.\n");
    }

    printf("\n");
}

void listarPlacasJ(Veiculo* lista) {
    Veiculo* atual = lista;
    int encontrou = 0;

    printf("Placas que começam com J e terminam com 0, 2, 4 ou 7 e seus respectivos proprietarios:\n");

    while (atual != NULL) {
        char primeiraLetra = atual->placa[0];
        char ultimaLetra = atual->placa[6];
        if (primeiraLetra == 'J' && (ultimaLetra == '0' || ultimaLetra == '2' || ultimaLetra == '4' || ultimaLetra == '7')) {
            printf("Placa: %s | Proprietario: %s\n", atual->placa, atual->proprietario);
            encontrou = 1;
        }
        atual = atual->proximo;
    }

    if (!encontrou) {
        printf("Nenhum veiculo encontrado.\n");
    }

    printf("\n");
}

int ehVogal(char caractere) {
    return (caractere == 'A' || caractere == 'E' || caractere == 'I' || caractere == 'O' || caractere == 'U' ||
            caractere == 'a' || caractere == 'e' || caractere == 'i' || caractere == 'o' || caractere == 'u');
}

void listarModeloCorPlacasVogal(Veiculo* lista) {
    Veiculo* atual = lista;
    int encontrou = 0;

    printf("Modelo e cor dos veiculos cujas placas possuem como segunda letra uma vogal e cuja soma dos valores numericos fornece um numero par:\n");

    while (atual != NULL) {
        char segundaLetra = atual->placa[1];
        int somaValoresNumericos = 0;

        if (ehVogal(segundaLetra)) {
            for (int i = 3; i <= 6; i++) {
                somaValoresNumericos += atual->placa[i] - '0';
            }

            if (somaValoresNumericos % 2 == 0) {
                printf("Modelo: %s | Cor: %s\n", atual->modelo, atual->cor);
                encontrou = 1;
            }
        }
        atual = atual->proximo;
    }

    if (!encontrou) {
        printf("Nenhum veiculo encontrado.\n");
    }

    printf("\n");
}

void trocarProprietario(Veiculo* lista, char chassi[]) {
    Veiculo* atual = lista;
    int encontrou = 0;

    while (atual != NULL) {
        if (strcmp(atual->chassi, chassi) == 0) {
            printf("Novo proprietario para o veiculo com chassi %s: ", chassi);
            scanf(" %[^\n]", atual->proprietario);
            printf("Proprietario alterado com sucesso!\n\n");
            encontrou = 1;
            break;
        }
        atual = atual->proximo;
    }

    if (!encontrou) {
        printf("Veiculo com chassi %s nao encontrado.\n\n", chassi);
    }
}

void listarVeiculos(Veiculo* lista) {
    Veiculo* atual = lista;

    printf("Lista de veículos:\n");

    while (atual != NULL) {
        printf("Proprietario: %s\n", atual->proprietario);
        printf("Combustivel: %s\n", atual->combustivel);
        printf("Modelo: %s\n", atual->modelo);
        printf("Cor: %s\n", atual->cor);
        printf("N chassi: %s\n", atual->chassi);
        printf("Ano: %d\n", atual->ano);
        printf("Placa: %s\n", atual->placa);
        printf("\n");
        atual = atual->proximo;
    }
}

int main() {
    Veiculo* listaVeiculos = NULL;
    int opcao = 0;

    while (opcao != 5) {
        printf("Programa de veiculos!\n");
        printf("1 - Inserir veiculo\n");
        printf("2 - Listar proprietarios de veiculos do ano de 2010 ou posterior movidos a diesel\n");
        printf("3 - Listar placas que comecam com J e terminam com 0, 2, 4 ou 7 e seus respectivos proprietarios\n");
        printf("4 - Listar modelo e cor dos veiculos cujas placas possuem como segunda letra uma vogal e cuja soma dos valores numericos fornece um numero par\n");
        printf("5 - Trocar proprietario de um veiculo\n");
        printf("6 - Listar todos os veiculos\n");
        printf("7 - Sair\n");
        printf("Escolha uma opcao: ");
        scanf("%d", &opcao);

        switch (opcao) {
            case 1: {
                char proprietario[100];
                char combustivel[10];
                char modelo[100];
                char cor[100];
                char chassi[100];
                char placa[10];
                int ano;
                
                printf("Informe o nome do proprietario: ");
                scanf(" %[^\n]", proprietario);
                printf("Informe o tipo de combustivel (alcool, diesel, gasolina): ");
                scanf(" %[^\n]", combustivel);
                printf("Informe o modelo do veiculo: ");
                scanf(" %[^\n]", modelo);
                printf("Informe a cor do veiculo: ");
                scanf(" %[^\n]", cor);
                printf("Informe o numero do chassi: ");
                scanf(" %[^\n]", chassi);
                printf("Informe o ano do veiculo: ");
                scanf("%d", &ano);
                printf("Informe a placa do veiculo (XXX1234): ");
                scanf(" %[^\n]", placa);

                Veiculo* novoVeiculo = criarVeiculo(proprietario, combustivel, modelo, cor, chassi, ano, placa);
                inserirVeiculo(&listaVeiculos, novoVeiculo);

                printf("Veiculo cadastrado com sucesso!\n\n");
                break;
            }
            case 2:
                listarProprietariosDiesel(listaVeiculos);
                break;
            case 3:
                listarPlacasJ(listaVeiculos);
                break;
            case 4:
                listarModeloCorPlacasVogal(listaVeiculos);
                break;
            case 5: {
                char chassi[100];
                printf("Informe o numero do chassi do veiculo: ");
                scanf(" %[^\n]", chassi);
                trocarProprietario(listaVeiculos, chassi);
                break;
            }
            case 6:
                listarVeiculos(listaVeiculos);
                break;
            case 7:
                printf("Game over!\n");
                break;
            default:
                printf("Opcao invalida.\n");
                break;
        }
    }
    return 0;
}
